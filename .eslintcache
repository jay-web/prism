[{"/Users/apple/projects/react/prism/src/index.js":"1","/Users/apple/projects/react/prism/src/App.js":"2","/Users/apple/projects/react/prism/src/reportWebVitals.js":"3","/Users/apple/projects/react/prism/src/seedColors.js":"4","/Users/apple/projects/react/prism/src/components/Palletes/Palettes.js":"5","/Users/apple/projects/react/prism/src/components/ColorBox/ColorBox.js":"6","/Users/apple/projects/react/prism/src/components/ColorBox/colorBox.style.js":"7","/Users/apple/projects/react/prism/src/components/Palletes/Palettes.styles.js":"8","/Users/apple/projects/react/prism/src/components/ColorBox/InnerContent.js":"9","/Users/apple/projects/react/prism/src/components/ColorBox/Content.js":"10","/Users/apple/projects/react/prism/src/colorGenerator.js":"11","/Users/apple/projects/react/prism/src/components/Header/Header.js":"12","/Users/apple/projects/react/prism/src/components/Slider/Slider.js":"13","/Users/apple/projects/react/prism/src/components/Snackbar/Snackbar.js":"14","/Users/apple/projects/react/prism/src/components/FormatSelector/Select.js":"15","/Users/apple/projects/react/prism/src/components/Footer/Footer.jsx":"16","/Users/apple/projects/react/prism/src/components/Home/Home.jsx":"17","/Users/apple/projects/react/prism/src/components/PalleteBox/PaletteBox.jsx":"18","/Users/apple/projects/react/prism/src/components/TinyBox/Tiny.jsx":"19","/Users/apple/projects/react/prism/src/components/SingleColorShades/SingleColorShades.js":"20","/Users/apple/projects/react/prism/src/components/Shades/Shades.jsx":"21","/Users/apple/projects/react/prism/src/components/CopyButton/CopyButton.js":"22","/Users/apple/projects/react/prism/src/components/Shades/shadesStyle.js":"23","/Users/apple/projects/react/prism/src/components/CreateNewPalette/CreateNewPalette.jsx":"24","/Users/apple/projects/react/prism/src/components/PrismDrawer/PrismDrawer.jsx":"25","/Users/apple/projects/react/prism/src/components/PrismDrawer/prismDrawer.style.js":"26","/Users/apple/projects/react/prism/src/components/ColorPicker/Colorpicker.jsx":"27","/Users/apple/projects/react/prism/src/components/ColorPicker/picker.style.js":"28","/Users/apple/projects/react/prism/src/components/NewColor/NewColor.jsx":"29","/Users/apple/projects/react/prism/src/components/NewColor/newColor.style.js":"30","/Users/apple/projects/react/prism/src/components/Dialog/PrismDialog.jsx":"31","/Users/apple/projects/react/prism/src/components/DraggableList/DraggableList.jsx":"32","/Users/apple/projects/react/prism/src/components/DraggableList/draggableListStyle.js":"33","/Users/apple/projects/react/prism/src/components/DrawerAppBar/DrawerAppBar.jsx":"34"},{"size":594,"mtime":1613309054996,"results":"35","hashOfConfig":"36"},{"size":3732,"mtime":1613394843723,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1611138414413,"results":"38","hashOfConfig":"36"},{"size":9798,"mtime":1612501506272,"results":"39","hashOfConfig":"36"},{"size":1823,"mtime":1613316275468,"results":"40","hashOfConfig":"36"},{"size":865,"mtime":1612876926083,"results":"41","hashOfConfig":"36"},{"size":947,"mtime":1612532003014,"results":"42","hashOfConfig":"36"},{"size":248,"mtime":1613395854225,"results":"43","hashOfConfig":"36"},{"size":1638,"mtime":1612531776147,"results":"44","hashOfConfig":"36"},{"size":858,"mtime":1612358815719,"results":"45","hashOfConfig":"36"},{"size":1254,"mtime":1612252858210,"results":"46","hashOfConfig":"36"},{"size":692,"mtime":1612276749353,"results":"47","hashOfConfig":"36"},{"size":1082,"mtime":1612361366414,"results":"48","hashOfConfig":"36"},{"size":597,"mtime":1612353741336,"results":"49","hashOfConfig":"36"},{"size":1652,"mtime":1612354506310,"results":"50","hashOfConfig":"36"},{"size":235,"mtime":1612361011810,"results":"51","hashOfConfig":"36"},{"size":1311,"mtime":1613310030409,"results":"52","hashOfConfig":"36"},{"size":1044,"mtime":1613317599958,"results":"53","hashOfConfig":"36"},{"size":955,"mtime":1613311296234,"results":"54","hashOfConfig":"36"},{"size":2573,"mtime":1612511761054,"results":"55","hashOfConfig":"36"},{"size":1415,"mtime":1612418005094,"results":"56","hashOfConfig":"36"},{"size":963,"mtime":1612418117866,"results":"57","hashOfConfig":"36"},{"size":1049,"mtime":1612417240880,"results":"58","hashOfConfig":"36"},{"size":381,"mtime":1612524069540,"results":"59","hashOfConfig":"36"},{"size":3386,"mtime":1613397324133,"results":"60","hashOfConfig":"36"},{"size":2353,"mtime":1613396516471,"results":"61","hashOfConfig":"36"},{"size":4222,"mtime":1613397370496,"results":"62","hashOfConfig":"36"},{"size":375,"mtime":1612592269232,"results":"63","hashOfConfig":"36"},{"size":1110,"mtime":1612859944714,"results":"64","hashOfConfig":"36"},{"size":1221,"mtime":1613375699371,"results":"65","hashOfConfig":"36"},{"size":3960,"mtime":1613293396224,"results":"66","hashOfConfig":"36"},{"size":736,"mtime":1613393367105,"results":"67","hashOfConfig":"36"},{"size":107,"mtime":1612871309524,"results":"68","hashOfConfig":"36"},{"size":1585,"mtime":1613375231022,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"6kfhjq",{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"/Users/apple/projects/react/prism/src/index.js",[],["151","152"],"/Users/apple/projects/react/prism/src/App.js",["153"],"import React from \"react\";\nimport Palettes from \"./components/Palletes/Palettes\";\nimport { Route, Switch } from \"react-router-dom\";\nimport seedColors from \"./seedColors\";\nimport \"./App.css\";\nimport { generatePallette } from \"./colorGenerator\";\nimport Home from \"./components/Home/Home\";\nimport SingleColorShades from \"./components/SingleColorShades/SingleColorShades\";\nimport CreateNewPalette from \"./components/CreateNewPalette/CreateNewPalette\";\n// import { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { AnimatedSwitch } from 'react-router-transition';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n    this.state = { palettes: savedPalettes || seedColors };\n  }\n\n  findPalette = (paletteName) => {\n    return this.state.palettes.find((item) => {\n      return item.id === paletteName; // id is equal to palette name in db\n    });\n  };\n\n  saveNewPalette = (newPalette) => {\n    console.log(newPalette);\n    this.setState(\n      { palettes: [...this.state.palettes, newPalette] },\n      this.syncLocalStorage\n    );\n  };\n\n  syncLocalStorage = () => {\n    // save palettes to localstorage\n    window.localStorage.setItem(\n      \"palettes\",\n      JSON.stringify(this.state.palettes)\n    );\n  };\n\n  deletePalette = (id) => {\n    const palettes = this.state.palettes.filter((item) => item.id !== id);\n    this.setState({ palettes: palettes }, this.syncLocalStorage);\n    console.log(id);\n  };\n\n  render() {\n    const { palettes } = this.state;\n    console.log(\"palettes\", palettes);\n    return (\n    \n            <AnimatedSwitch\n            atEnter={{ opacity: 0 }}\n            atLeave={{ opacity: 0 }}\n            atActive={{ opacity: 1 }}\n            className=\"switch-wrapper\"\n          >\n                \n                  <Route\n                    exact\n                    path=\"/palette/createnew\"\n                    render={() => (\n                      <div className=\"\">\n                        <CreateNewPalette\n                          savePalette={this.saveNewPalette}\n                          palettes={palettes}\n                        />\n                      </div>\n                    )}\n                  />\n                  <Route\n                    exact\n                    path=\"/\"\n                    render={() => (\n                      <div className=\"\">\n                        <Home\n                          palettes={palettes}\n                          deletePalette={this.deletePalette}\n                        />\n                      </div>\n                    )}\n                  />\n                  <Route\n                    exact\n                    path=\"/palette/:paletteName\"\n                    render={(routeProps) => (\n                      <div className=\"\">\n                        <Palettes\n                          paletteId={routeProps.match.params.paletteName}\n                          palettes={generatePallette(\n                            this.findPalette(\n                              routeProps.match.params.paletteName\n                            )\n                          )}\n                        />\n                      </div>\n                    )}\n                  />\n                  <Route\n                    exact\n                    path=\"/palette/:paletteId/:colorId\"\n                    render={() => (\n                      <div className=\"\">\n                        <SingleColorShades palettes={palettes} />\n                      </div>\n                    )}\n                  />\n               \n                </AnimatedSwitch>\n            // </TransitionGroup>\n          \n    );\n  }\n}\n\nexport default App;\n\n","/Users/apple/projects/react/prism/src/reportWebVitals.js",[],"/Users/apple/projects/react/prism/src/seedColors.js",["154"],"export default [\n  {\n    paletteName: \"Material UI Colors\",\n    id: \"material-ui-colors\",\n    emoji: \"🎨\",\n    colors: [\n      { name: \"red\", color: \"#F44336\" },\n      { name: \"pink\", color: \"#E91E63\" },\n      { name: \"purple\", color: \"#9C27B0\" },\n      { name: \"deeppurple\", color: \"#673AB7\" },\n      { name: \"indigo\", color: \"#3F51B5\" },\n      { name: \"blue\", color: \"#2196F3\" },\n      { name: \"lightblue\", color: \"#03A9F4\" },\n      { name: \"cyan\", color: \"#00BCD4\" },\n      { name: \"teal\", color: \"#009688\" },\n      { name: \"green\", color: \"#4CAF50\" },\n      { name: \"lightgreen\", color: \"#8BC34A\" },\n      { name: \"lime\", color: \"#CDDC39\" },\n      { name: \"yellow\", color: \"#FFEB3B\" },\n      { name: \"amber\", color: \"#FFC107\" },\n      { name: \"orange\", color: \"#FF9800\" },\n      { name: \"deeporange\", color: \"#FF5722\" },\n      { name: \"brown\", color: \"#795548\" },\n      { name: \"grey\", color: \"#9E9E9E\" },\n      { name: \"bluegrey\", color: \"#607D8B\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors v1\",\n    id: \"flat-ui-colors-v1\",\n    emoji: \"🤙\",\n    colors: [\n      { name: \"Turquoise\", color: \"#1abc9c\" },\n      { name: \"Emerald\", color: \"#2ecc71\" },\n      { name: \"PeterRiver\", color: \"#3498db\" },\n      { name: \"Amethyst\", color: \"#9b59b6\" },\n      { name: \"WetAsphalt\", color: \"#34495e\" },\n      { name: \"GreenSea\", color: \"#16a085\" },\n      { name: \"Nephritis\", color: \"#27ae60\" },\n      { name: \"BelizeHole\", color: \"#2980b9\" },\n      { name: \"Wisteria\", color: \"#8e44ad\" },\n      { name: \"MidnightBlue\", color: \"#2c3e50\" },\n      { name: \"SunFlower\", color: \"#f1c40f\" },\n      { name: \"Carrot\", color: \"#e67e22\" },\n      { name: \"Alizarin\", color: \"#e74c3c\" },\n      { name: \"Clouds\", color: \"#ecf0f1\" },\n      { name: \"Concrete\", color: \"#95a5a6\" },\n      { name: \"Orange\", color: \"#f39c12\" },\n      { name: \"Pumpkin\", color: \"#d35400\" },\n      { name: \"Pomegranate\", color: \"#c0392b\" },\n      { name: \"Silver\", color: \"#bdc3c7\" },\n      { name: \"Asbestos\", color: \"#7f8c8d\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Dutch\",\n    id: \"flat-ui-colors-dutch\",\n    emoji: \"🇳🇱\",\n    colors: [\n      { name: \"Sunflower\", color: \"#FFC312\" },\n      { name: \"Energos\", color: \"#C4E538\" },\n      { name: \"BlueMartina\", color: \"#12CBC4\" },\n      { name: \"LavenderRose\", color: \"#FDA7DF\" },\n      { name: \"BaraRose\", color: \"#ED4C67\" },\n      { name: \"RadiantYellow\", color: \"#F79F1F\" },\n      { name: \"AndroidGreen\", color: \"#A3CB38\" },\n      { name: \"MediterraneanSea\", color: \"#1289A7\" },\n      { name: \"LavenderTea\", color: \"#D980FA\" },\n      { name: \"VerryBerry\", color: \"#B53471\" },\n      { name: \"PuffinsBill\", color: \"#EE5A24\" },\n      { name: \"PixelatedGrass\", color: \"#009432\" },\n      { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\n      { name: \"ForgottenPurple\", color: \"#9980FA\" },\n      { name: \"HollyHock\", color: \"#833471\" },\n      { name: \"RedPigment\", color: \"#EA2027\" },\n      { name: \"TurkishAqua\", color: \"#006266\" },\n      { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\n      { name: \"CircumorbitalRing\", color: \"#5758BB\" },\n      { name: \"MagentaPurple\", color: \"#6F1E51\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors American\",\n    id: \"flat-ui-colors-american\",\n    emoji: \"🇺🇸\",\n    colors: [\n      { name: \"LightGreenishBlue\", color: \"#55efc4\" },\n      { name: \"FadedPoster\", color: \"#81ecec\" },\n      { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\n      { name: \"ShyMoment\", color: \"#a29bfe\" },\n      { name: \"CityLights\", color: \"#dfe6e9\" },\n      { name: \"MintLeaf\", color: \"#00b894\" },\n      { name: \"RobinsEggBlue\", color: \"#00cec9\" },\n      { name: \"ElectronBlue\", color: \"#0984e3\" },\n      { name: \"ExodusFruit\", color: \"#6c5ce7\" },\n      { name: \"SoothingBreeze\", color: \"#b2bec3\" },\n      { name: \"SourLemon\", color: \"#ffeaa7\" },\n      { name: \"FirstDate\", color: \"#fab1a0\" },\n      { name: \"PinkGlamour\", color: \"#ff7675\" },\n      { name: \"Pico8Pink\", color: \"#fd79a8\" },\n      { name: \"AmericanRiver\", color: \"#636e72\" },\n      { name: \"BrightYarrow\", color: \"#fdcb6e\" },\n      { name: \"OrangeVille\", color: \"#e17055\" },\n      { name: \"Chi-Gong\", color: \"#d63031\" },\n      { name: \"PrunusAvium\", color: \"#e84393\" },\n      { name: \"DraculaOrchid\", color: \"#2d3436\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Aussie\",\n    id: \"flat-ui-colors-aussie\",\n    emoji: \"🇦🇺\",\n    colors: [\n      { name: \"Beekeeper\", color: \"#f6e58d\" },\n      { name: \"SpicedNectarine\", color: \"#ffbe76\" },\n      { name: \"PinkGlamour\", color: \"#ff7979\" },\n      { name: \"JuneBud\", color: \"#badc58\" },\n      { name: \"CoastalBreeze\", color: \"#dff9fb\" },\n      { name: \"Turbo\", color: \"#f9ca24\" },\n      { name: \"QuinceJelly\", color: \"#f0932b\" },\n      { name: \"CarminePink\", color: \"#eb4d4b\" },\n      { name: \"PureApple\", color: \"#6ab04c\" },\n      { name: \"HintOfIcePack\", color: \"#c7ecee\" },\n      { name: \"MiddleBlue\", color: \"#7ed6df\" },\n      { name: \"Heliotrope\", color: \"#e056fd\" },\n      { name: \"ExodusFruit\", color: \"#686de0\" },\n      { name: \"DeepKoamaru\", color: \"#30336b\" },\n      { name: \"SoaringEagle\", color: \"#95afc0\" },\n      { name: \"GreenlandGreen\", color: \"#22a6b3\" },\n      { name: \"SteelPink\", color: \"#be2edd\" },\n      { name: \"Blurple\", color: \"#4834d4\" },\n      { name: \"DeepCove\", color: \"#130f40\" },\n      { name: \"WizardGrey\", color: \"#535c68\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors British\",\n    id: \"flat-ui-colors-british\",\n    emoji: \"🇬🇧\",\n    colors: [\n      { name: \"ProtossPylon\", color: \"#00a8ff\" },\n      { name: \"Periwinkle\", color: \"#9c88ff\" },\n      { name: \"Rise-N-Shine\", color: \"#fbc531\" },\n      { name: \"DownloadProgress\", color: \"#4cd137\" },\n      { name: \"Seabrook\", color: \"#487eb0\" },\n      { name: \"VanaDylBlue\", color: \"#0097e6\" },\n      { name: \"MattPurple\", color: \"#8c7ae6\" },\n      { name: \"NanohanachaGold\", color: \"#e1b12c\" },\n      { name: \"SkirretGreen\", color: \"#44bd32\" },\n      { name: \"Naval\", color: \"#40739e\" },\n      { name: \"NasturcianFlower\", color: \"#e84118\" },\n      { name: \"LynxWhite\", color: \"#f5f6fa\" },\n      { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\n      { name: \"MazarineBlue\", color: \"#273c75\" },\n      { name: \"BlueNights\", color: \"#353b48\" },\n      { name: \"HarleyOrange\", color: \"#c23616\" },\n      { name: \"HintOfPensive\", color: \"#dcdde1\" },\n      { name: \"ChainGangGrey\", color: \"#718093\" },\n      { name: \"PicoVoid\", color: \"#192a56\" },\n      { name: \"ElectroMagnetic\", color: \"#2f3640\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Spanish\",\n    id: \"flat-ui-colors-spanish\",\n    emoji: \"🇪🇸\",\n    colors: [\n      { name: \"JacksonsPurple\", color: \"#40407a\" },\n      { name: \"C64Purple\", color: \"#706fd3\" },\n      { name: \"SwanWhite\", color: \"#f7f1e3\" },\n      { name: \"SummerSky\", color: \"#34ace0\" },\n      { name: \"CelestialGreen\", color: \"#33d9b2\" },\n      { name: \"LuckyPoint\", color: \"#2c2c54\" },\n      { name: \"Liberty\", color: \"#474787\" },\n      { name: \"HotStone\", color: \"#aaa69d\" },\n      { name: \"DevilBlue\", color: \"#227093\" },\n      { name: \"PalmSpringsSplash\", color: \"#218c74\" },\n      { name: \"FlourescentRed\", color: \"#ff5252\" },\n      { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\n      { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\n      { name: \"MandarinSorbet\", color: \"#ffb142\" },\n      { name: \"SpicedButterNut\", color: \"#ffda79\" },\n      { name: \"EyeOfNewt\", color: \"#b33939\" },\n      { name: \"ChileanFire\", color: \"#cd6133\" },\n      { name: \"GreyPorcelain\", color: \"#84817a\" },\n      { name: \"AlamedaOchre\", color: \"#cc8e35\" },\n      { name: \"Desert\", color: \"#ccae62\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors Indian\",\n    id: \"flat-ui-colors-indian\",\n    emoji: \"🇮🇳\",\n    colors: [\n      { name: \"OrchidOrange\", color: \"#FEA47F\" },\n      { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\n      { name: \"HoneyGlow\", color: \"#EAB543\" },\n      { name: \"SweetGarden\", color: \"#55E6C1\" },\n      { name: \"FallingStar\", color: \"#CAD3C8\" },\n      { name: \"RichGardenia\", color: \"#F97F51\" },\n      { name: \"ClearChill\", color: \"#1B9CFC\" },\n      { name: \"WhitePepper\", color: \"#F8EFBA\" },\n      { name: \"Keppel\", color: \"#58B19F\" },\n      { name: \"ShipsOfficer\", color: \"#2C3A47\" },\n      { name: \"FieryFuchsia\", color: \"#B33771\" },\n      { name: \"BlueBell\", color: \"#3B3B98\" },\n      { name: \"GeorgiaPeach\", color: \"#FD7272\" },\n      { name: \"OasisStream\", color: \"#9AECDB\" },\n      { name: \"BrightUbe\", color: \"#D6A2E8\" },\n      { name: \"MagentaPurple\", color: \"#6D214F\" },\n      { name: \"EndingNavyBlue\", color: \"#182C61\" },\n      { name: \"SasquatchSocks\", color: \"#FC427B\" },\n      { name: \"PineGlade\", color: \"#BDC581\" },\n      { name: \"HighlighterLavender\", color: \"#82589F\" }\n    ]\n  },\n  {\n    paletteName: \"Flat UI Colors French\",\n    id: \"flat-ui-colors-french\",\n    emoji: \"🇫🇷\",\n    colors: [\n      { name: \"FlatFlesh\", color: \"#fad390\" },\n      { name: \"MelonMelody\", color: \"#f8c291\" },\n      { name: \"Livid\", color: \"#6a89cc\" },\n      { name: \"Spray\", color: \"#82ccdd\" },\n      { name: \"ParadiseGreen\", color: \"#b8e994\" },\n      { name: \"SquashBlossom\", color: \"#f6b93b\" },\n      { name: \"MandarinRed\", color: \"#e55039\" },\n      { name: \"AzraqBlue\", color: \"#4a69bd\" },\n      { name: \"Dupain\", color: \"#60a3bc\" },\n      { name: \"AuroraGreen\", color: \"#78e08f\" },\n      { name: \"IcelandPoppy\", color: \"#fa983a\" },\n      { name: \"TomatoRed\", color: \"#eb2f06\" },\n      { name: \"YueGuangBlue\", color: \"#1e3799\" },\n      { name: \"GoodSamaritan\", color: \"#3c6382\" },\n      { name: \"Waterfall\", color: \"#38ada9\" },\n      { name: \"CarrotOrange\", color: \"#e58e26\" },\n      { name: \"JalapenoRed\", color: \"#b71540\" },\n      { name: \"DarkSapphire\", color: \"#0c2461\" },\n      { name: \"ForestBlues\", color: \"#0a3d62\" },\n      { name: \"ReefEncounter\", color: \"#079992\" }\n    ]\n  }\n];\n","/Users/apple/projects/react/prism/src/components/Palletes/Palettes.js",[],"/Users/apple/projects/react/prism/src/components/ColorBox/ColorBox.js",[],"/Users/apple/projects/react/prism/src/components/ColorBox/colorBox.style.js",[],"/Users/apple/projects/react/prism/src/components/Palletes/Palettes.styles.js",[],"/Users/apple/projects/react/prism/src/components/ColorBox/InnerContent.js",["155"],"import React from \"react\";\nimport { Grid, withStyles } from \"@material-ui/core\";\nimport useStyles from \"./colorBox.style\";\nimport { Link } from \"react-router-dom\";\n\nimport CopyButton from \"../CopyButton/CopyButton\";\nimport chroma from \"chroma-js\";\n\n// import Snackbars from \"./Snackbar\";\n\nclass InnerContent extends React.Component {\n \n\n  render() {\n    const { name, classes, paletteId, id, background } = this.props;\n    const isDarkColor = chroma(background).luminance() <= 0.8;\n    // const isLightColor = chroma(background).luminance() >= 0.8\n    const textColor = isDarkColor ? \"white\" : \"black\";\n    \n    return (\n      <div >\n        <Grid container alignItems=\"center\" justify=\"space-evenly\" className={classes.buttonBox}>\n          <Grid item className={classes.copyButton}>\n            <CopyButton {...this.props} />\n          </Grid>\n          <Grid item container justify=\"space-between\" alignItems=\"flex-end\" className={classes.copyContainer}>\n            <Grid \n                className={classes.boxContent}\n                style={ {color:`${textColor}`, flexWrap: \"wrap\", width: \".5rem\"}}\n\n                >{name}</Grid>\n            <Grid item >\n              <Link to={`/palette/${paletteId}/${id}`} className={classes.seeMore} style={ {color:`${textColor}`}} onClick={e => e.stopPropagation()} >\n              More\n              </Link>\n              </Grid>\n          </Grid>\n        </Grid>\n\n       \n      </div>\n      \n    );\n  }\n}\n\nexport default withStyles(useStyles)(InnerContent);\n\n{\n  /* <CopyButton handleClick={this.handleClick} handleClose={this.handleClose} open={this.state.open} classes={classes} /> */\n}\n","/Users/apple/projects/react/prism/src/components/ColorBox/Content.js",[],"/Users/apple/projects/react/prism/src/colorGenerator.js",[],"/Users/apple/projects/react/prism/src/components/Header/Header.js",["156"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SliderBox from \"../Slider/Slider\";\nimport FormatSelector from \"../FormatSelector/Select\";\nimport \"./header.css\";\n\nclass Header extends React.Component {\n  render() {\n    const {\n      changeLevel,\n      level,\n      format,\n      handleFormat,\n      paletteName,\n      showSlider\n    } = this.props;\n    return (\n      <div className=\"header-root\">\n        <Link to=\"/\" className=\"title\" ><span >Prism</span></Link>\n        { showSlider && <SliderBox changeLevel={changeLevel} level={level} /> }\n        <FormatSelector format={format} handleChange={handleFormat} />\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","/Users/apple/projects/react/prism/src/components/Slider/Slider.js",[],"/Users/apple/projects/react/prism/src/components/Snackbar/Snackbar.js",[],"/Users/apple/projects/react/prism/src/components/FormatSelector/Select.js",["157","158"],"import React from \"react\";\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport \"./select.css\";\nimport PrismSnackBar from \"../Snackbar/Snackbar\";\n\nclass  FormatSelector extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {changed : false};\n    this.handleClose = this.handleClose.bind(this);\n    \n  }\n  handleClick = (e) =>  {\n    this.setState({ changed: true });\n    this.props.handleChange(e);\n  }\n\n  handleClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ changed: false });\n  }\n\n    render(){\n        const { format, handleChange } = this.props;\n        return (\n          <>\n            <FormControl className=\"formControl\">\n            <Select\n              value={format}\n              onChange={this.handleClick}\n              displayEmpty\n              className=\"selectEmpty\"\n            //   inputProps={{ 'aria-label': 'Without label' }}\n            >\n            \n              <MenuItem value='hex'>HEX - #ffffff</MenuItem>\n              <MenuItem value='rgb'>RGB - rgb(255,255, 255)</MenuItem>\n              <MenuItem value='rgba'>RGBA - rgba(255,255,255, 1.0)</MenuItem>\n            </Select>\n            {/* <FormHelperText>Color Format</FormHelperText> */}\n          </FormControl>\n          <PrismSnackBar handleClose={this.handleClose} copied={this.state.changed} message=\"Color Format Changed 🤡 \" background=\"\"/>\n          </>\n        )\n    }\n}\n\nexport default FormatSelector;","/Users/apple/projects/react/prism/src/components/Footer/Footer.jsx",[],"/Users/apple/projects/react/prism/src/components/Home/Home.jsx",[],"/Users/apple/projects/react/prism/src/components/PalleteBox/PaletteBox.jsx",[],"/Users/apple/projects/react/prism/src/components/TinyBox/Tiny.jsx",["159"],"import React from \"react\";\nimport \"./tinyBox.css\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nclass TinyBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderTinyColorBox = this.renderTinyColorBox.bind(this);\n  }\n  renderTinyColorBox() {\n    return this.props.colors.map((item, idx) => {\n      return (\n        <div\n          className=\"tinyBox\"\n          style={{ backgroundColor: `${item.color}` }}\n          key={idx}\n        ></div>\n      );\n    });\n  }\n\n  // deletePalette = (e, colors) => {\n  //   e.stopPropagation();\n  //   console.log(colors);\n  //   this.props.deletePalette(colors);\n  // }\n  render() {\n    // const { colors, name } = this.props;\n    // console.log(colors);\n    return <div className=\"showBoxes\"> \n    {/* <span className=\"deleteBox\"><DeleteForeverIcon onClick={this.deletePalette} /></span> */}\n    {this.renderTinyColorBox()}\n    </div>;\n  }\n}\n\nexport default TinyBox;\n","/Users/apple/projects/react/prism/src/components/SingleColorShades/SingleColorShades.js",[],"/Users/apple/projects/react/prism/src/components/Shades/Shades.jsx",[],"/Users/apple/projects/react/prism/src/components/CopyButton/CopyButton.js",[],"/Users/apple/projects/react/prism/src/components/Shades/shadesStyle.js",[],"/Users/apple/projects/react/prism/src/components/CreateNewPalette/CreateNewPalette.jsx",[],"/Users/apple/projects/react/prism/src/components/PrismDrawer/PrismDrawer.jsx",[],"/Users/apple/projects/react/prism/src/components/PrismDrawer/prismDrawer.style.js",["160"],"import { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 400;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    fontFamily: 'New Rocker, cursive'\n  },\n  appBar: {\n  \n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    \n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    height: `calc(100vh - 64px)`,\n    // padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  title: {\n    textDecoration: \"none\",\n    fontFamily: 'New Rocker, cursive'\n    // color: \"white\",\n  },\n  titleBox:{\n    flexGrow: 1\n  },\n  boxContainer: {\n      // height: \"100vh - 64px\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(4, 1fr)\",\n  },\n  \"@media only screen and (max-width: 750px)\": {\n    boxContainer: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(2, 1fr)\",\n    },\n    \n    \n  },\n  \"@media only screen and (min-width: 750px)\": {\n    boxContainer: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(3, 1fr)\",\n    },\n  },\n  \"@media only screen and (min-width: 1000px)\": {\n    boxContainer: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(4, 1fr)\",\n    },\n  },\n}));\n\nexport default useStyles;\n","/Users/apple/projects/react/prism/src/components/ColorPicker/Colorpicker.jsx",["161","162"],"import React from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport { withStyles } from \"@material-ui/core\";\nimport styles from \"./picker.style\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport chroma from \"chroma-js\";\n\nclass PrismColorPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentColor: \"#0d84b2\", colorName: \"\" };\n  }\n\n  componentDidMount() {\n  \n    ValidatorForm.addValidationRule(\"isColorNameUnique\", (value) => {\n      \n     return this.props.colorsList.every(({name}) => name.toLowerCase() !== value.toLowerCase() );\n    });\n\n    ValidatorForm.addValidationRule(\"isColorUnique\", (value) => {\n      \n      return this.props.colorsList.every(({color}) => color !== this.state.currentColor );\n     });\n    \n  }\n\n  handleChangeComplete = (color) => {\n    this.setState({ currentColor: color.hex });\n    this.props.onChangeColor(color.hex);\n  };\n\n  handleInputChange = (event) => {\n    const name = event.target.value;\n    this.setState({ colorName: name });\n  };\n\n  handleAddColor = (color) => {\n    const newColor = {\n      color: this.state.currentColor,\n      name: this.state.colorName,\n    };\n    console.log(newColor);\n    this.props.addNewColor(newColor);\n    // this.setState({colorName: \"\"})\n  };\n\n  createRandomColor = () =>  {\n    const allColors = this.props.allPalettes.map((p) => p.colors).flat();\n    let rand;\n    let newColor;\n    let isDuplicateColor = true;\n    while(isDuplicateColor){\n      rand = Math.floor(Math.random() * allColors.length);\n      newColor = allColors[rand];\n      isDuplicateColor = this.props.colorsList.some(color => color.name == newColor.name)\n      console.log(newColor);\n    }\n\n    \n    this.props.addNewColor(newColor);\n  }\n\n \n\n \n  render() {\n    const { classes } = this.props;\n    const isDarkMode = chroma(this.state.currentColor).luminance() <= 0.8;\n    const textColor = isDarkMode ? \"white\" : \"black\";\n    const paletteIsFull = this.props.colorsList.length >= 20;\n    const addButtonColor = paletteIsFull ? \"grey\" : this.state.currentColor;\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.buttonBox}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.button}\n            onClick= {this.props.clearColorsList}\n            startIcon={<DeleteIcon />}\n          >\n            Clear Color\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            onClick={this.createRandomColor}\n            disabled={paletteIsFull}\n            startIcon={<CloudUploadIcon />\n            }\n          >\n            Random Color\n          </Button>\n        </div>\n\n        <SketchPicker\n          color={this.state.currentColor}\n          className={classes.picker}\n          onChangeComplete={this.handleChangeComplete}\n        />\n\n        <ValidatorForm\n          // ref=\"form\"\n          onSubmit={this.handleAddColor}\n          onError={(errors) => console.log(errors)}\n          style={{ marginTop: \".5rem\" }}\n        >\n          <TextValidator\n            onChange={this.handleInputChange}\n            label=\"Color Name\"\n            value={this.state.colorName}\n            validators={[\"required\", \"isColorNameUnique\", \"isColorUnique\"]}\n            errorMessages={[\"this field is required\", \"Name should be unique\", \"Color should be unique\"]}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            style={{ backgroundColor: addButtonColor, marginTop: \"1rem\", cursor: \"pointer\", color: `${textColor}` }}\n            startIcon={<SaveIcon />}\n            // onClick={this.handleInputSubmit}\n            type=\"submit\"\n            disabled={paletteIsFull}\n          >\n            {paletteIsFull ? \"Palette full\" : \"Add Color\" }\n          </Button>\n        </ValidatorForm>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(PrismColorPicker);\n","/Users/apple/projects/react/prism/src/components/ColorPicker/picker.style.js",["163"],"export default {\n    root:{\n        display: \"flex\",\n        height: \"70vh\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\",\n        fontFamily: 'New Rocker, cursive'\n    },\n    buttonBox:{\n        marginTop: \"3rem\"\n    },\n    button:{\n        marginRight: \".5rem\"\n    },\n    picker:{\n        marginTop: \"1rem\"\n    }\n\n\n}","/Users/apple/projects/react/prism/src/components/NewColor/NewColor.jsx",[],"/Users/apple/projects/react/prism/src/components/NewColor/newColor.style.js",["164"],"\n\nexport default {\n    root:{\n        display: \"grid\",\n        gridTemplateColumn: \"1fr 1fr 1fr\",\n        height: \"23vh\",\n        // width: \"25vh\",\n        color: \"white\",\n        alignItem: \"center\",\n        fontFamily: 'New Rocker, cursive',\n\n        \"& div\":{\n            gridRowStart: \"2\",\n            gridColumnStart:\"1\",\n            gridColumnEnd: \"2\",\n            fontSize: \"1.2rem\"\n        },\n\n        \n    },\n    innerBox:{\n        display: \"flex\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        wordBreak: \"break-word\"\n        // alignItem: \"center\"\n        \n    },\n    deleteButton:{\n        marginTop: \"1rem\", \n        // marginLeft: \"0.7rem\",\n        cursor: \"pointer\",\n        transition: \"all .5s ease-in-out\",\n        \"&:hover\":{\n            transform: \"scaleY(1.2)\"\n        }\n    }\n    \n}\n\n// @media only screen and (max-width: 750px){\n//     .shadesBox{\n//         grid-template-columns: repeat(2, 1fr);\n//     }\n\n// }\n\n// @media only screen and (min-width: 750px){\n//     .shadesBox{\n//         grid-template-columns: repeat(3, 1fr);\n//     }\n\n// }\n// @media only screen and (min-width: 1000px){\n//     .shadesBox{\n//         grid-template-columns: repeat(5, 1fr);\n//     }\n\n// }",["165","166"],"/Users/apple/projects/react/prism/src/components/Dialog/PrismDialog.jsx",[],"/Users/apple/projects/react/prism/src/components/DraggableList/DraggableList.jsx",[],"/Users/apple/projects/react/prism/src/components/DraggableList/draggableListStyle.js",["167"],"export default {\n    root :{\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(4, 1fr)\"\n    }\n}","/Users/apple/projects/react/prism/src/components/DrawerAppBar/DrawerAppBar.jsx",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":3,"column":17,"nodeType":"174","messageId":"175","endLine":3,"endColumn":23},{"ruleId":"176","severity":1,"message":"177","line":1,"column":1,"nodeType":"178","endLine":244,"endColumn":3},{"ruleId":"179","severity":1,"message":"180","line":49,"column":1,"nodeType":"181","messageId":"182","endLine":51,"endColumn":2},{"ruleId":"172","severity":1,"message":"183","line":14,"column":7,"nodeType":"174","messageId":"175","endLine":14,"endColumn":18},{"ruleId":"172","severity":1,"message":"184","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":22},{"ruleId":"172","severity":1,"message":"185","line":30,"column":25,"nodeType":"174","messageId":"175","endLine":30,"endColumn":37},{"ruleId":"172","severity":1,"message":"186","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":25},{"ruleId":"172","severity":1,"message":"187","line":1,"column":22,"nodeType":"174","messageId":"175","endLine":1,"endColumn":30},{"ruleId":"188","severity":1,"message":"189","line":60,"column":53,"nodeType":"190","messageId":"191","endLine":60,"endColumn":89},{"ruleId":"192","severity":1,"message":"193","line":60,"column":73,"nodeType":"194","messageId":"195","endLine":60,"endColumn":75},{"ruleId":"176","severity":1,"message":"196","line":1,"column":1,"nodeType":"178","endLine":21,"endColumn":2},{"ruleId":"176","severity":1,"message":"196","line":3,"column":1,"nodeType":"178","endLine":40,"endColumn":2},{"ruleId":"168","replacedBy":"197"},{"ruleId":"170","replacedBy":"198"},{"ruleId":"176","severity":1,"message":"196","line":1,"column":1,"nodeType":"178","endLine":6,"endColumn":2},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'paletteName' is assigned a value but never used.","'FormHelperText' is defined but never used.","'handleChange' is assigned a value but never used.","'DeleteForeverIcon' is defined but never used.","'useTheme' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'newColor'.","ArrowFunctionExpression","unsafeRefs","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Assign object to a variable before exporting as module default",["199"],["200"],"no-global-assign","no-unsafe-negation"]